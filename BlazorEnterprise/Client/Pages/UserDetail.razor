@page "/userDetail/{UserId}"
@inject HttpClient Http
@inject NavigationManager Nav
@using BlazorEnterprise.Shared
@using System.Net.Http.Json
<TopBar ScreenName="Home" />
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-3">
            <div class="iq-card">
                <div class="iq-card-header d-flex justify-content-between">
                    <div class="iq-header-title">
                        <h4 class="card-title">@Title</h4>
                    </div>
                </div>
                <div class="iq-card-body">
                    <div class="form-group">
                            <div class="add-img-user profile-img-edit">
                                <img class="profile-pic img-fluid" src="images/user/11.png" alt="profile-pic">
                            </div>
                        </div>
                </div>
            </div>
        </div>
        <div class="col-lg-9">
            <div class="iq-card">
                <div class="iq-card-header d-flex justify-content-between">
                    <div class="iq-header-title">
                        <h4 class="card-title">User's Information</h4>
                    </div>
                </div>
                <div class="iq-card-body">
                    <div class="new-user-info">
                        @if(!string.IsNullOrEmpty(PostError))
                        {
                            <div class="alert alert-danger col-md-12">
                              @PostError
                            </div>
                        }
                        <EditForm Model="User" OnValidSubmit="PostForm">
                            <div class="text-danger">
@*                                <DataAnnotationsValidator />
                                <ValidationSummary />*@
                            </div>
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="fname">Email:</label>
                                    <InputText @bind-Value="User.EmailAddress" class="form-control" placeholder="Email address" disabled="@IsEdit"></InputText>
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="lname">Phone Number:</label>
                                    <InputText @bind-Value="User.PhoneNumber" class="form-control" placeholder="Phone Number"></InputText>
                                </div>
                                <div class="form-group col-md-12">
                                    <label for="add1">Full Name:</label>
                                    <InputText @bind-Value="User.FullName" class="form-control" placeholder="Full Name"></InputText>
                                </div>
                                <div class="form-group col-sm-12">
                                    <label>Role:</label>
                                    <InputSelect class="form-control" @bind-Value="User.RoleId">
                                        <option>--Select--</option>
                                        @foreach (var r in Roles)
                                        {
                                            <option value="@r.RoleId">@r.RoleName</option>
                                        }
                                    </InputSelect>
                                </div>
                            </div>
                            <hr>
                            <h5 class="mb-3">Security</h5>
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="pass">Password:</label>
                                    <InputText type="password" class="form-control" @bind-Value="User.Password" placeholder="Password"></InputText>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code 
{
    [Parameter]
    public string UserId { get; set; }

    string Title => UserId == "0" ? "New User" : "Edit User";
    bool IsEdit => UserId != "0";
    UserViewModel User = new();
    RoleViewModel[] Roles = Array.Empty<RoleViewModel>();

    protected override async Task OnInitializedAsync()
    {
        Roles = await Http.GetFromJsonAsync<RoleViewModel[]>("Roles/AllRoles");
        if (UserId != "0")
        {
            User = await Http.GetFromJsonAsync<UserViewModel>($"Users/UserDetails?id={UserId}");
        }
    }
    string PostError = "";
    async void PostForm()
    {
        try
        {
            string resp = "";
            if (!IsEdit)
            {
                var rq = await Http.PostAsJsonAsync("Users/AddUser", User);
                resp = await rq.Content.ReadAsStringAsync();
            }
            else
            {
                var rq = await Http.PostAsJsonAsync("Users/Edit", User);
                resp = await rq.Content.ReadAsStringAsync();
            }
            if(!resp.Contains("Success"))
            {
                PostError = resp;
                StateHasChanged();
            }
            else
            {
                Nav.NavigateTo("users");
            }
        }
        catch (Exception ex)
        {
            PostError = ex.Message;
            StateHasChanged();
        }
    }
}
