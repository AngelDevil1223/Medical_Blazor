@page "/users"
@inject HttpClient Http
@inject NavigationManager Nav
@using BlazorEnterprise.Shared
@using System.Net.Http.Json
<TopBar ScreenName="Users"/>
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            @if (!string.IsNullOrEmpty(Error))
            {
                <div class="alert alert-danger col-md-12">
                    @Error
                </div>
            }
            <div class="iq-card iq-card-block iq-card-stretch iq-card-height">
                <div class="iq-card-header d-flex justify-content-between">
                    <div class="iq-header-title">
                        <button class="btn btn-primary" @onclick="AddUser">Add</button>
                    </div>
                </div>
                <div class="iq-card-body">
                    <div class="table-responsive">
                        <table class="table mb-0 table-borderless">
                            <thead>
                                <tr>
                                    <th scope="col">UserName</th>
                                    <th scope="col">Full name</th>
                                    <th scope="col">Phone number</th>
                                    <th scope="col">Role</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var u in Users)
                                {
                                    <tr>
                                        <td>@u.EmailAddress</td>
                                        <td>@u.FullName</td>
                                        <td>@u.PhoneNumber</td>
                                        <td>@u.Role</td>
                                        <td>
                                            <button class="btn btn-info" @onclick="@(()=>EditUser(u))"><i class="ri-pencil-fill mr-2"></i> Edit</button>
                                            <button class="btn btn-danger" @onclick="@(()=>DeleteUser(u))"><i class="ri-delete-bin-6-fill mr-2"></i> Delete</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code
{
    string Error = "";
    UserViewModel[] Users = Array.Empty<UserViewModel>();
    public string DisplayName { get; set; }
    protected override async Task OnInitializedAsync()
    {
        ActiveScreen.Screen = "Users";
        try
        {
            Users = await Http.GetFromJsonAsync<UserViewModel[]>("Users/AllUsers");
        }
        catch(Exception ex)
        {
            Error=ex.Message;
            StateHasChanged();
        }
    }

    void AddUser()
    {
        Nav.NavigateTo("userDetail/0");
    }

    void EditUser(UserViewModel user)
    {
        Nav.NavigateTo($"userDetail/{user.UserId}");
    }

    async void DeleteUser(UserViewModel user)
    {
        Error = "";
        try
        {
            var req = await Http.PostAsJsonAsync("Users/Delete", user.UserId);
            var res = await req.Content.ReadAsStringAsync();
            if(!res.Contains("Success"))
            {
                Error = res;
                StateHasChanged();
            }
            else
            {
                Users = await Http.GetFromJsonAsync<UserViewModel[]>("Users/AllUsers");
            }
        }
        catch (Exception ex)
        {
            Error = ex.Message;
            StateHasChanged();
        }
    }

}
